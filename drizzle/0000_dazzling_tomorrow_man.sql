CREATE TABLE `accounts` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`bank_id` integer,
	`name` text NOT NULL,
	`bank` text NOT NULL,
	`type` text NOT NULL,
	`subtype` text,
	`color` text NOT NULL,
	`balance` real DEFAULT 0 NOT NULL,
	`initial_balance` real DEFAULT 0,
	`credit_limit` real DEFAULT 0,
	`is_favorite` integer DEFAULT false NOT NULL,
	`is_active` integer DEFAULT true NOT NULL,
	`agency` text,
	`agency_digit` text,
	`account_number` text,
	`account_digit` text,
	`bank_code` text,
	`branch_id` text,
	`account_id` text,
	`ofx_account_type` text,
	`ofx_bank_id` text,
	`ofx_branch_id` text,
	`ofx_account_id` text,
	`ofx_key` text,
	`ofx_url` text,
	`ofx_version` text DEFAULT '102',
	`description` text,
	`notes` text,
	`last_sync_at` integer,
	`sync_enabled` integer DEFAULT false,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`bank_id`) REFERENCES `banks`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `banks` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`code` text NOT NULL,
	`name` text NOT NULL,
	`full_name` text NOT NULL,
	`website` text,
	`ofx_url` text,
	`ofx_version` text DEFAULT '102',
	`is_active` integer DEFAULT true NOT NULL,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch())
);
--> statement-breakpoint
CREATE UNIQUE INDEX `banks_code_unique` ON `banks` (`code`);--> statement-breakpoint
CREATE TABLE `budgets` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`category_id` integer,
	`name` text NOT NULL,
	`description` text,
	`amount` real NOT NULL,
	`spent` real DEFAULT 0,
	`remaining` real DEFAULT 0,
	`period` text DEFAULT 'mensal',
	`start_date` integer NOT NULL,
	`end_date` integer NOT NULL,
	`alert_percentage` real DEFAULT 80,
	`is_active` integer DEFAULT true,
	`auto_renew` integer DEFAULT false,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`category_id`) REFERENCES `categories`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `categories` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`name` text NOT NULL,
	`type` text NOT NULL,
	`color` text NOT NULL,
	`icon` text NOT NULL,
	`description` text,
	`parent_id` integer,
	`is_active` integer DEFAULT true NOT NULL,
	`sort_order` integer DEFAULT 0,
	`ofx_category` text,
	`tax_deductible` integer DEFAULT false,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`parent_id`) REFERENCES `categories`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `import_exports` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`type` text NOT NULL,
	`format` text NOT NULL,
	`status` text DEFAULT 'pending',
	`file_name` text,
	`file_size` integer,
	`file_path` text,
	`file_hash` text,
	`total_records` integer DEFAULT 0,
	`processed_records` integer DEFAULT 0,
	`error_records` integer DEFAULT 0,
	`duplicate_records` integer DEFAULT 0,
	`account_id` integer,
	`date_range` text,
	`categories` text,
	`options` text,
	`log` text,
	`errors` text,
	`started_at` integer,
	`completed_at` integer,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `invoices` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`account_id` integer NOT NULL,
	`card_name` text NOT NULL,
	`amount` real NOT NULL,
	`minimum_amount` real DEFAULT 0,
	`previous_balance` real DEFAULT 0,
	`new_balance` real DEFAULT 0,
	`credit_limit` real DEFAULT 0,
	`available_credit` real DEFAULT 0,
	`due_date` integer NOT NULL,
	`closing_date` integer NOT NULL,
	`period_start` integer,
	`period_end` integer,
	`status` text DEFAULT 'aberta',
	`is_paid` integer DEFAULT false NOT NULL,
	`paid_at` integer,
	`paid_amount` real DEFAULT 0,
	`paid_account_id` integer,
	`statement_id` text,
	`fit_id` text,
	`notes` text,
	`import_source` text,
	`import_date` integer,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`paid_account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `recurring_transactions` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`name` text NOT NULL,
	`description` text NOT NULL,
	`amount` real NOT NULL,
	`type` text NOT NULL,
	`category_id` integer NOT NULL,
	`account_id` integer NOT NULL,
	`destination_account_id` integer,
	`frequency` text NOT NULL,
	`interval` integer DEFAULT 1,
	`day_of_month` integer,
	`day_of_week` integer,
	`start_date` integer NOT NULL,
	`end_date` integer,
	`max_occurrences` integer,
	`current_occurrences` integer DEFAULT 0,
	`is_active` integer DEFAULT true,
	`last_generated` integer,
	`next_due` integer,
	`notes` text,
	`tags` text,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`category_id`) REFERENCES `categories`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`destination_account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `transactions` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`user_id` integer NOT NULL,
	`type` text NOT NULL,
	`description` text NOT NULL,
	`amount` real NOT NULL,
	`original_amount` real,
	`date` integer NOT NULL,
	`effective_date` integer,
	`due_date` integer,
	`category_id` integer NOT NULL,
	`account_id` integer NOT NULL,
	`destination_account_id` integer,
	`status` text DEFAULT 'confirmada',
	`is_paid` integer DEFAULT false NOT NULL,
	`is_recurring` integer DEFAULT false,
	`recurring_id` integer,
	`fit_id` text,
	`check_number` text,
	`reference_number` text,
	`sic` text,
	`payee_list_id` text,
	`server_transaction_id` text,
	`correct_fit_id` text,
	`correct_action` text,
	`investment_transaction_type` text,
	`security_id` text,
	`units` real,
	`unit_price` real,
	`commission` real,
	`taxes` real,
	`fees` real,
	`load` real,
	`withholding` real,
	`tax_exempt` integer DEFAULT false,
	`bank_transaction_type` text,
	`sub_account_from` text,
	`sub_account_to` text,
	`memo` text,
	`payee` text,
	`payee_account` text,
	`payee_bank` text,
	`payee_city` text,
	`payee_state` text,
	`payee_postal_code` text,
	`payee_country` text,
	`payee_phone` text,
	`currency` text DEFAULT 'BRL',
	`exchange_rate` real DEFAULT 1,
	`original_currency` text,
	`location` text,
	`latitude` real,
	`longitude` real,
	`notes` text,
	`tags` text,
	`attachments` text,
	`import_source` text,
	`import_date` integer,
	`import_batch` text,
	`hash` text,
	`created_by` integer,
	`updated_by` integer,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch()),
	FOREIGN KEY (`user_id`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE cascade,
	FOREIGN KEY (`category_id`) REFERENCES `categories`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`destination_account_id`) REFERENCES `accounts`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`recurring_id`) REFERENCES `transactions`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`created_by`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE no action,
	FOREIGN KEY (`updated_by`) REFERENCES `users`(`id`) ON UPDATE no action ON DELETE no action
);
--> statement-breakpoint
CREATE TABLE `users` (
	`id` integer PRIMARY KEY AUTOINCREMENT NOT NULL,
	`email` text NOT NULL,
	`password` text NOT NULL,
	`name` text NOT NULL,
	`avatar` text,
	`cpf` text,
	`phone` text,
	`address` text,
	`city` text,
	`state` text,
	`zip_code` text,
	`country` text DEFAULT 'BR',
	`timezone` text DEFAULT 'America/Sao_Paulo',
	`currency` text DEFAULT 'BRL',
	`date_format` text DEFAULT 'DD/MM/YYYY',
	`language` text DEFAULT 'pt-BR',
	`is_active` integer DEFAULT true NOT NULL,
	`created_at` integer DEFAULT (unixepoch()),
	`updated_at` integer DEFAULT (unixepoch())
);
--> statement-breakpoint
CREATE UNIQUE INDEX `users_email_unique` ON `users` (`email`);